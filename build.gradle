plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-web")
    runtimeOnly("org.postgresql:postgresql")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
//    testImplementation("com.h2database:h2")
}

def profile = project.hasProperty('profile') ? project.getProperty('profile') : 'dev'
println("Building with profile: ${profile}")

if (profile == 'prod') {
    println("Prod mode enabled.")
    // an example of prod only dependency
    // dependencies {
    //        runtimeOnly 'some-dependency'
    // }
} else if (profile == 'dev') {
    println("DEv mode enabled")
} else {
    println("Not a real profile")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showExceptions true
        showCauses true
        showStackTraces true
    }
}

tasks.register('printBuildInfo') {
    description = "Prints custom build info"
    doLast {
        println("Project anme: ${project.name}")
        println("Versoin: ${project.version}")
        println("Gradle version: ${gradle.gradleVersion}")
        println("Java version: ${System.getProperty('java.version')}")
        println("Active profile : ${profile}")
    }
}

bootJar {
    dependsOn printBuildInfo
    archiveFileName = "blog-site-${version}.jar"
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": version,
                "Built-By": System.getProperty("user.name"),
                "Built-Java": System.getProperty("java.version")
        )
    }
}